package com.user;

import java.util.Calendar;

enum gender{male, female}

/**
 * This bundle of classes form the user related entities of the domain layer of the program
 * All classes should only implement their attributes and getter and setter methods
 * All FileIO is done within the Controller layer
 * All UI and user dependent behavior is done within the Interface layer
 * @author zhuweiji
 *
 */
public class UserAcc {
    /**
     * MyStars program account - user information for logging in and out of the program
     * @param password - hashed password from this user's salt using algorithm in LoginHandler hash function
     * @param salt - random salt generated by LoginHandler
     * @param permissions - hashed permissions from this user's salt
     * @param user_id - unique userid used as foreign key and link to all related user objects
     */
    private static int count = 0;
    private String username;
    private String password; // hashed password and salt
    private final String salt;
    private final String permissions;
    private String user_id;

    public static class acc_info{
        /**
         * helper subclass containing just essential user info - username and password
         */
        String username;
        String password;
        String salt;

        public acc_info(String username, String password){
            this.username = username;
            this.password = password;
        }
        public void setSalt(String salt){
            this.salt = salt;
        }
    }

    public UserAcc(acc_info acc_info,String user_id, String permissions){
        /**
         * Takes in acc_info object with username and password, as well as other info
         * if acc_info has salt set then assumed that username and password are hashed
         * if not hash is generated and password and permissions are hashed using that hash
         */
        count++;

        this.username = acc_info.username;
        this.user_id = user_id;
        if (acc_info.salt == null){
            this.salt = LogInHandler.getNextSalt().toString();
            setPassword(acc_info.password);
            this.permissions = LogInHandler.hash(permissions,salt);
        }
        else{
            this.salt = acc_info.salt;
            this.password = acc_info.password;
            this.permissions = permissions;
        }
    }

    public UserAcc(String username, String hashed_pw, String salt, String hashed_permissions, String user_id){
        /**
         * alternative constructor with hashed information
         */
        this.username = username;
        this.user_id = user_id;
        this.salt = salt;
        this.password = hashed_pw;
        this.permissions = hashed_permissions;
    }


    public String getUsername(){
        return username;
    }

    public void sendEmail(){
        //todo fill in
    }

    public String getSalt() {
        return salt;
    }


    public static int getCount() {
        return count;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        /**
         * takes in un-hashed password and hashes and sets
         */
        this.password = LogInHandler.hash(password, salt);
    }

    public String getUser_id(){ return user_id; }

    public String getHashedPermissions() {
        return permissions;
    }

    public String getPlainPermissions(){
        if (LogInHandler.hash("student", salt).equals(permissions)){
            return "student";
        }
        else{
            return "admin";
        }
    }
}